/*
Nexus Repository Manager REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.76.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nexus

import (
	"encoding/json"
)

// checks if the MaliciousRiskCountByEcosystem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaliciousRiskCountByEcosystem{}

// MaliciousRiskCountByEcosystem struct for MaliciousRiskCountByEcosystem
type MaliciousRiskCountByEcosystem struct {
	Ecosystem *string `json:"ecosystem,omitempty"`
	Count *int64 `json:"count,omitempty"`
}

// NewMaliciousRiskCountByEcosystem instantiates a new MaliciousRiskCountByEcosystem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaliciousRiskCountByEcosystem() *MaliciousRiskCountByEcosystem {
	this := MaliciousRiskCountByEcosystem{}
	return &this
}

// NewMaliciousRiskCountByEcosystemWithDefaults instantiates a new MaliciousRiskCountByEcosystem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaliciousRiskCountByEcosystemWithDefaults() *MaliciousRiskCountByEcosystem {
	this := MaliciousRiskCountByEcosystem{}
	return &this
}

// GetEcosystem returns the Ecosystem field value if set, zero value otherwise.
func (o *MaliciousRiskCountByEcosystem) GetEcosystem() string {
	if o == nil || IsNil(o.Ecosystem) {
		var ret string
		return ret
	}
	return *o.Ecosystem
}

// GetEcosystemOk returns a tuple with the Ecosystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaliciousRiskCountByEcosystem) GetEcosystemOk() (*string, bool) {
	if o == nil || IsNil(o.Ecosystem) {
		return nil, false
	}
	return o.Ecosystem, true
}

// HasEcosystem returns a boolean if a field has been set.
func (o *MaliciousRiskCountByEcosystem) HasEcosystem() bool {
	if o != nil && !IsNil(o.Ecosystem) {
		return true
	}

	return false
}

// SetEcosystem gets a reference to the given string and assigns it to the Ecosystem field.
func (o *MaliciousRiskCountByEcosystem) SetEcosystem(v string) {
	o.Ecosystem = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *MaliciousRiskCountByEcosystem) GetCount() int64 {
	if o == nil || IsNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaliciousRiskCountByEcosystem) GetCountOk() (*int64, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *MaliciousRiskCountByEcosystem) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *MaliciousRiskCountByEcosystem) SetCount(v int64) {
	o.Count = &v
}

func (o MaliciousRiskCountByEcosystem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaliciousRiskCountByEcosystem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ecosystem) {
		toSerialize["ecosystem"] = o.Ecosystem
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableMaliciousRiskCountByEcosystem struct {
	value *MaliciousRiskCountByEcosystem
	isSet bool
}

func (v NullableMaliciousRiskCountByEcosystem) Get() *MaliciousRiskCountByEcosystem {
	return v.value
}

func (v *NullableMaliciousRiskCountByEcosystem) Set(val *MaliciousRiskCountByEcosystem) {
	v.value = val
	v.isSet = true
}

func (v NullableMaliciousRiskCountByEcosystem) IsSet() bool {
	return v.isSet
}

func (v *NullableMaliciousRiskCountByEcosystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaliciousRiskCountByEcosystem(val *MaliciousRiskCountByEcosystem) *NullableMaliciousRiskCountByEcosystem {
	return &NullableMaliciousRiskCountByEcosystem{value: val, isSet: true}
}

func (v NullableMaliciousRiskCountByEcosystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaliciousRiskCountByEcosystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


