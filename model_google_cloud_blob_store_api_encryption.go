/*
Nexus Repository Manager REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.75.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nexus

import (
	"encoding/json"
)

// checks if the GoogleCloudBlobStoreApiEncryption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleCloudBlobStoreApiEncryption{}

// GoogleCloudBlobStoreApiEncryption struct for GoogleCloudBlobStoreApiEncryption
type GoogleCloudBlobStoreApiEncryption struct {
	// The type of GCP server side encryption to use.
	EncryptionType *string `json:"encryptionType,omitempty"`
	// CryptoKey ID for KMS encryption.
	EncryptionKey *string `json:"encryptionKey,omitempty"`
}

// NewGoogleCloudBlobStoreApiEncryption instantiates a new GoogleCloudBlobStoreApiEncryption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCloudBlobStoreApiEncryption() *GoogleCloudBlobStoreApiEncryption {
	this := GoogleCloudBlobStoreApiEncryption{}
	return &this
}

// NewGoogleCloudBlobStoreApiEncryptionWithDefaults instantiates a new GoogleCloudBlobStoreApiEncryption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudBlobStoreApiEncryptionWithDefaults() *GoogleCloudBlobStoreApiEncryption {
	this := GoogleCloudBlobStoreApiEncryption{}
	return &this
}

// GetEncryptionType returns the EncryptionType field value if set, zero value otherwise.
func (o *GoogleCloudBlobStoreApiEncryption) GetEncryptionType() string {
	if o == nil || IsNil(o.EncryptionType) {
		var ret string
		return ret
	}
	return *o.EncryptionType
}

// GetEncryptionTypeOk returns a tuple with the EncryptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudBlobStoreApiEncryption) GetEncryptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionType) {
		return nil, false
	}
	return o.EncryptionType, true
}

// HasEncryptionType returns a boolean if a field has been set.
func (o *GoogleCloudBlobStoreApiEncryption) HasEncryptionType() bool {
	if o != nil && !IsNil(o.EncryptionType) {
		return true
	}

	return false
}

// SetEncryptionType gets a reference to the given string and assigns it to the EncryptionType field.
func (o *GoogleCloudBlobStoreApiEncryption) SetEncryptionType(v string) {
	o.EncryptionType = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *GoogleCloudBlobStoreApiEncryption) GetEncryptionKey() string {
	if o == nil || IsNil(o.EncryptionKey) {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudBlobStoreApiEncryption) GetEncryptionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionKey) {
		return nil, false
	}
	return o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *GoogleCloudBlobStoreApiEncryption) HasEncryptionKey() bool {
	if o != nil && !IsNil(o.EncryptionKey) {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *GoogleCloudBlobStoreApiEncryption) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

func (o GoogleCloudBlobStoreApiEncryption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleCloudBlobStoreApiEncryption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EncryptionType) {
		toSerialize["encryptionType"] = o.EncryptionType
	}
	if !IsNil(o.EncryptionKey) {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	return toSerialize, nil
}

type NullableGoogleCloudBlobStoreApiEncryption struct {
	value *GoogleCloudBlobStoreApiEncryption
	isSet bool
}

func (v NullableGoogleCloudBlobStoreApiEncryption) Get() *GoogleCloudBlobStoreApiEncryption {
	return v.value
}

func (v *NullableGoogleCloudBlobStoreApiEncryption) Set(val *GoogleCloudBlobStoreApiEncryption) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCloudBlobStoreApiEncryption) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCloudBlobStoreApiEncryption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCloudBlobStoreApiEncryption(val *GoogleCloudBlobStoreApiEncryption) *NullableGoogleCloudBlobStoreApiEncryption {
	return &NullableGoogleCloudBlobStoreApiEncryption{value: val, isSet: true}
}

func (v NullableGoogleCloudBlobStoreApiEncryption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCloudBlobStoreApiEncryption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


